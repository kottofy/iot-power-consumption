{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "iotHubName": {
            "type": "string",
            "minLength": 3,
            "metadata": {
                "description": "Name of the IoT Hub instance to provision."
            }
        },
        "skuName": {
            "type": "string",
            "allowedValues": [
                "F1",
                "S1",
                "S2"
            ],
            "defaultValue": "S1",
            "metadata": {
                "description": "One of the supported SKUs: F1, S1 or S2"
            }
        },
        "capacityUnits": {
            "type": "int",
            "minValue": 1,
            "defaultValue": 1,
            "metadata": {
                "description": "Number of desired IoT Hub units. Restricted to 1 unit for F1. Can be set up to maximum number allowed for subscription."
            }
        },
        "d2cMessageRetentionInDaysPeriod": {
            "type": "int",
            "minValue": 1,
            "maxValue": 7,
            "defaultValue": 1,
            "metadata": {
                "description": "Retention time in days for device-to-cloud messages."
            }
        },
        "d2cPartitionCount": {
            "type": "int",
            "minValue": 2,
            "defaultValue": 2,
            "metadata": {
                "description": "Number of desired partitions for device-to-cloud event ingestion."
            }
        },
        "streamAnalyticsJobName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "metadata": {
                "description": "Stream Analytics Job Name, can contain alphanumeric characters and hypen and must be 3-63 characters long"
            }
        },
        "numberOfStreamingUnits": {
            "type": "int",
            "minValue": 1,
            "maxValue": 48,
            "defaultValue": 1,
            "allowedValues": [
                1,
                3,
                6,
                12,
                18,
                24,
                30,
                36,
                42,
                48
            ],
            "metadata": {
                "description": "Number of Stream Analytis Jobs Streaming Units"
            }
        },
        "cosmosAccountName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Cosmos DB Account"
            }
        },
        "cosmosDatabaseName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Cosmos Database Instance"
            }
        },
        "cosmosCollectionName": {
            "type": "string",
            "defaultValue": "consumption",
            "metadata": {
                "description": "The name of the Cosmos Database Collection"
            }
        },
        "cosmosDocumentId": {
            "type": "string",
            "defaultValue": "id",
            "metadata": {
                "description": "The field name for the Cosmos document primary ID"
            }
        },
        "cosmosPartitionKey": {
            "type": "string",
            "defaultValue": "/storeId",
            "metadata": {
                "description": "The key to be used as a partitioning key for the dataset. Should split data into more or less equal sizes. Should start with a '/' and not trail with a slash."
            }
        }
    },
    "variables": {
        "cosmosApiVersion": "[providers('Microsoft.DocumentDB','databaseAccounts').apiVersions[0]]",
        "hubApiVersion": "[providers('Microsoft.Devices','IotHubs').apiVersions[0]]"
    },
    "resources": [
        {
            "type": "Microsoft.Devices/IotHubs",
            "sku": {
                "name": "[parameters('skuName')]",
                "capacity": "[parameters('capacityUnits')]"
            },
            "name": "[parameters('iotHubName')]",
            "apiVersion": "[variables('hubApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "eventHubEndpoints": {
                    "events": {
                        "retentionTimeInDays": "[parameters('d2cMessageRetentionInDaysPeriod')]",
                        "partitionCount": "[parameters('d2cPartitionCount')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.StreamAnalytics/StreamingJobs",
            "apiVersion": "2016-03-01",
            "name": "[parameters('streamAnalyticsJobName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "name": "standard"
                },
                "outputErrorPolicy": "stop",
                "eventsOutOfOrderPolicy": "adjust",
                "eventsOutOfOrderMaxDelayInSeconds": 0,
                "eventsLateArrivalMaxDelayInSeconds": 5,
                "dataLocale": "en-US",
                "inputs": [
                    {
                        "name": "IoTHub",
                        "properties": {
                            "dataSource": {
                                "properties": {
                                    "iotHubNamespace": "[parameters('iotHubName')]",
                                    "sharedAccessPolicyKey": "[listkeys(resourceId('Microsoft.Devices/IotHubs/IotHubKeys',parameters('iotHubName'), 'iothubowner'), variables('hubApiVersion')).primaryKey]",
                                    "sharedAccessPolicyName": "iothubowner",
                                    "endpoint": "messages/events",
                                    "consumerGroupName": "$Default"
                                },
                                "type": "Microsoft.Devices/IotHubs"
                            },
                            "serialization": {
                                "properties": {
                                    "encoding": "UTF8"
                                },
                                "type": "Json"
                            },
                            "compression": {
                                "type": "None"
                            },
                            "type": "Stream"
                        }
                    }
                ],
                "transformation": {
                    "name": "Transformation",
                    "properties": {
                        "streamingUnits": "[parameters('numberOfStreamingUnits')]",
                        "query": "SELECT\r\n    *\r\nINTO\r\n    [CosmosDB]\r\nFROM\r\n    [IoTHub]"
                    }
                },
                "outputs": [
                    {
                        "name": "CosmosDB",
                        "properties": {
                            "dataSource": {
                                "properties": {
                                    "accountId": "[parameters('cosmosAccountName')]",
                                    "accountKey": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosAccountName')), variables('cosmosApiVersion')).primaryMasterKey]",
                                    "collectionNamePattern": "[parameters('cosmosCollectionName')]",
                                    "database": "[parameters('cosmosDatabaseName')]",
                                    "documentId": "[parameters('cosmosDocumentId')]",
                                    "partitionKey": "[parameters('cosmosPartitionKey')]"
                                },
                                "type": "Microsoft.Storage/DocumentDB"
                            },
                            "diagnostics": null,
                            "etag": null,
                            "serialization": null
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Devices/IotHubs/', parameters('iotHubName'))]",
                "[concat('Microsoft.DocumentDB/databaseAccounts/', parameters('cosmosAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "kind": "GlobalDocumentDB",
            "name": "[parameters('cosmosAccountName')]",
            "apiVersion": "[variables('cosmosApiVersion')]",
            "location": "[resourceGroup().location]",
            "tags": {},
            "scale": null,
            "properties": {
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "name": "[parameters('cosmosDatabaseName')]"
            }
        }
    ],
    "outputs": {
        "iotHubKeys": {
            "value": "[listKeys(resourceId('Microsoft.Devices/iotHubs', parameters('iotHubName')), variables('hubApiVersion'))]",
            "type": "object"
        },
        "cosmosKeys": {
            "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosAccountName')), variables('cosmosApiVersion'))]",
            "type": "object"
        }
    }
}